#!groovy

/* 
    This script will ensure an username/password secret is present or absent and the 
    the content is up to date
*/

import hudson.model.*
import jenkins.model.*
import jenkins.*
import hudson.*
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.common.*
import com.cloudbees.plugins.credentials.domains.*
import com.cloudbees.plugins.credentials.impl.*

//Main()
def credentialsStore = Jenkins.instance.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()
def domain = Domain.global()

def oldCredential = null
def credentialExists = false

// check if credential exists if it does set the flag true and save the current credential
println("Checking for username/password secret with id ${secretId}")
credentialsStore?.getCredentials(domain).each{
    if (it.id == "${secretId}") {
        credentialExists = true
        oldCredential = it
        println("${secretId} found")
    }
}

// if the secret state is present, create or update
if ("${secretState}" == "present") {
    // if found check username and password to make sure they are the same
    if (credentialExists) {
        // if username and password are the same there is no update to run
        if (("${username}" == oldCredential.username) && ("${pass}" == oldCredential.password?.getPlainText())) {
            println("username and password for secret ${secretId}  hasn't changed, nothing to update")
        }
        // an update to the credential is needed
        else {
            println("Updating the credential ${secretId} the username or password is different")

            newCredential = new UsernamePasswordCredentialsImpl(
                CredentialsScope.GLOBAL,
                "${secretId}",
                "${secretId} User/Pass secret generated by ansible",
                "${username}",
                "${pass}"
            )

            credentialsStore.updateCredentials(doamin, oldCredential, newCredential)
        }
    }
    // since the credential doesn't exist create it
    else {
        println("Creating the credential ${secretId} since it doesn't exist")

        credential = new UsernamePasswordCredentialsImpl(
            CredentialsScope.GLOBAL,
            "${secretId}",
            "${secretId} User/Pass secret generated by ansible",
            "${username}",
            "${pass}"
        )

        credentialsStore.addCredentials(domain, credential)
    }
}
// remove the secret if it exists
else if ("${secretState}" == "absent") {
    // if the credential exists remove it
    if (credentialExists) {
       println("Removing user/pass credential ${secretId}")
       credentialsStore.removeCredentials(domain, oldCredential) 
    }
    // the credential doesn't exist, no action
    else {
        println("No credential found ${secretId}, nothing to remove")
    }
}
// error out since the secret state isn't correct
else {
    println("The state of the secret must be present or absent")
}